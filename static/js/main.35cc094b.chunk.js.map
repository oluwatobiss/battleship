{"version":3,"sources":["components/Header.js","components/GameBoard.js","components/BattleshipsDock.js","components/UsersGridArea.js","components/ComputersGridArea.js","createGameBoardCoordinate.js","createWaterCells.js","placeShipsInWater.js","shipFactory.js","checkCellCoordinate.js","getShipOccupiedCells.js","placeShipsInDockArea.js","changeShipOrientation.js","dragShip.js","addHitOrMissMark.js","components/Body.js","components/Footer.js","components/App.js","index.js"],"names":["Header","GameBoard","props","className","boardOwner","waterOwner","BattleshipsDock","shipOwner","UsersGridArea","ComputersGridArea","createGameBoardCoordinate","gameBoard","document","getElementsByClassName","forEach","board","i","cell","createElement","classList","add","append","test","toString","slice","appendChild","createWaterCells","gameWater","contains","setAttribute","placeShipsInWater","owner","ships","cellCoord","getOccupiedCellsNums","getOccupiedCellsCoords","airCurrHeadCell","batCurrHeadCell","cruCurrHeadCell","subCurrHeadCell","desCurrHeadCell","occupiedCellsNums","occupiedCellsCoords","shipData","ship","getRandomNum","Math","floor","random","shipOrientation","cellSize","children","clientWidth","occupiedCells","Set","aircraftCarrier","battleship","cruiser","submarine","destroyer","shipInitialCellNumber","proposedShipCellsNums","somePropCellsNotFree","checkIfAllProposedShipCellsNumsAreFree","length","includes","id","style","width","height","name","notHeadColumns","notHeadRows","num","console","error","shipFactory","life","checkCellCoordinate","horizontalCoordinate","verticalCoordinate","log","getShipOccupiedCellsNumbers","headCellNum","shipName","orientation","shipHeadPosition","shipCellsCoverageNumbers","shipLength","push","getShipOccupiedCellsCoordinates","shipCellsCoverageCoordinates","placeShipsInDockArea","battleshipDock","dock","changeShipOrientation","gameStarted","e","currentCellNum","target","dataset","allShipsOccupiedCellsNums","dblclickShipHeadCellNum","dblclickShipProposedCellsNums","obj","filter","n","dragShip","shipAxisPosition","shipCurrHeadCell","draggedShipCurrHeadCellNum","draggedShipCurrOccupiedCellsNums","draggedShipCurrAxisPosition","draggedShipProposedCellsNums","interact","draggable","modifiers","snap","targets","snappers","grid","x","y","relativePoints","offset","restrictRect","restriction","on","dx","dy","transform","round","addHitOrMissMark","cellOwner","shipsInDockingArea","cellFired","Number","backgroundColor","innerText","color","gameOver","messageBoard","gameInfo","userCells","pcCells","userShipsInDockingArea","pcShipsInDockingArea","startGameBtn","restartGameBtn","userCellsShot","userAircraftCarrCurrHeadCellNum","userBattleshipCurrHeadCellNum","userCruiserCurrHeadCellNum","userSubmarineCurrHeadCellNum","userDestroyerCurrHeadCellNum","pcAircraftCarrCurrHeadCellNum","pcBattleshipCurrHeadCellNum","pcCruiserCurrHeadCellNum","pcSubmarineCurrHeadCellNum","pcDestroyerCurrHeadCellNum","userShips","pcShips","aircraftCarrierAxisPosition","battleShipAxisPosition","cruiserAxisPosition","submarineAxisPosition","destroyerAxisPosition","userOccupiedCellsNums","userOccupiedCellsCoords","pcOccupiedCellsNums","pcOccupiedCellsCoords","Body","useState","setGameStarted","useEffect","getElementById","querySelectorAll","changeAircraftCarrierOrientation","changeBattleshipOrientation","changeCruiserOrientation","changeSubmarineOrientation","changeDestroyerOrientation","checkIfGameIsOver","dockingAreaShips","Array","from","every","addBorder","this","border","cursor","removeBorder","shootShip","borderColor","cellNum","addEventListener","c","removeEventListener","onClick","unset","display","window","location","reload","Footer","href","rel","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.35cc094b.chunk.js","sourcesContent":["function Header() {\r\n    return <h1>Battleship</h1>;\r\n}\r\n\r\nexport default Header;","function GameBoard(props) {\r\n    return (\r\n        <div className={`game-board ${props.boardOwner}`}>\r\n            <div className={`game-water ${props.waterOwner}`}></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GameBoard;","function BattleshipsDock(props) {\r\n    return <div className={`ship-dock ${props.shipOwner}`}></div>;\r\n}\r\n\r\nexport default BattleshipsDock;","import GameBoard from \"./GameBoard\";\r\nimport BattleshipsDock from \"./BattleshipsDock\";\r\n\r\nfunction UsersGridArea() {\r\n    return (\r\n        <div className=\"board-n-ships\">\r\n            <GameBoard boardOwner=\"users-board\" waterOwner=\"users-water\" />\r\n            <BattleshipsDock shipOwner=\"user-ships\" />\r\n            <p>Your Battleships</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UsersGridArea;","import GameBoard from \"./GameBoard\";\r\nimport BattleshipsDock from \"./BattleshipsDock\";\r\n\r\nfunction ComputersGridArea() {\r\n    return (\r\n        <div className=\"board-n-ships\">\r\n            <GameBoard boardOwner=\"pc-board\" waterOwner=\"pc-water\" />\r\n            <BattleshipsDock shipOwner=\"pc-ships\" />\r\n            <p>Computer's Battleships</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComputersGridArea;","function createGameBoardCoordinate() {\r\n    const gameBoard = document.getElementsByClassName(\"game-board\");\r\n    [...gameBoard].forEach(board => {\r\n        for (let i = 0; i < 121; i++) {\r\n            const cell = document.createElement('div');\r\n            cell.classList.add(\"coordinate\");\r\n            if (i > 0 && i < 11) {\r\n                const letters = [\"\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\"];\r\n                cell.append(letters[i]);\r\n            }\r\n            if (/^11$|22|33|44|55|66|77|88|99|110/.test(i.toString())) {\r\n                cell.append(i.toString().slice(1));\r\n            }\r\n            board.appendChild(cell);\r\n        }\r\n    });\r\n}\r\n\r\nexport default createGameBoardCoordinate;","function createWaterCells() {\r\n    const gameWater = document.getElementsByClassName(\"game-water\");\r\n    [...gameWater].forEach(board => {\r\n        for (let i = 0; i < 100; i++) {\r\n            const cell = document.createElement('div');\r\n            cell.classList.add(\"cell\");\r\n\r\n            board.classList.contains(\"pc-water\")\r\n            ? cell.setAttribute(\"id\", `pc-cell-${i}`)\r\n            : cell.setAttribute(\"id\", `user-cell-${i}`);\r\n\r\n            board.appendChild(cell);\r\n        }\r\n    });\r\n}\r\n\r\nexport default createWaterCells;","function placeShipsInWater(\r\n    owner,\r\n    ships, \r\n    cellCoord, \r\n    getOccupiedCellsNums, \r\n    getOccupiedCellsCoords, \r\n    airCurrHeadCell, \r\n    batCurrHeadCell, \r\n    cruCurrHeadCell, \r\n    subCurrHeadCell, \r\n    desCurrHeadCell,\r\n    occupiedCellsNums,\r\n    occupiedCellsCoords\r\n    ) {\r\n    ships.forEach(shipData => {        \r\n        const ship = document.createElement('div');\r\n        const getRandomNum = () => Math.floor(Math.random() * 100);\r\n        const shipOrientation = Math.floor(Math.random() * 2) % 2 === 0 ? \"h\" : \"v\";\r\n        const cellSize = document.getElementsByClassName(\"users-water\")[0].children[0].clientWidth;\r\n        const occupiedCells = [...new Set([\r\n            ...occupiedCellsNums.aircraftCarrier,\r\n            ...occupiedCellsNums.battleship,\r\n            ...occupiedCellsNums.cruiser,\r\n            ...occupiedCellsNums.submarine,\r\n            ...occupiedCellsNums.destroyer\r\n        ])];\r\n    \r\n        let shipInitialCellNumber = getRandomNum();\r\n        let proposedShipCellsNums = [];\r\n        let somePropCellsNotFree = false;\r\n        let usersWaterCell = null;\r\n    \r\n        if (owner === \"user\") {\r\n            ship.setAttribute(\"id\", shipData.id);\r\n            ship.setAttribute(\"data-orientation\", shipOrientation);\r\n        }\r\n\r\n        function checkIfAllProposedShipCellsNumsAreFree() {\r\n            for (let i = 0; i < proposedShipCellsNums.length; i++) {\r\n                if (occupiedCells.includes(proposedShipCellsNums[i])) {\r\n                    somePropCellsNotFree = true;\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        \r\n        if (shipOrientation === \"h\") {\r\n            if (owner === \"user\") {\r\n                ship.style.width = cellSize * shipData.length + \"px\";\r\n                ship.style.height = cellSize + \"px\";\r\n            }\r\n            \r\n            proposedShipCellsNums = getOccupiedCellsNums(shipInitialCellNumber, shipData.name, shipOrientation);\r\n            checkIfAllProposedShipCellsNumsAreFree();\r\n\r\n            while (shipData.notHeadColumns.test(cellCoord(shipInitialCellNumber)) || somePropCellsNotFree) {\r\n                somePropCellsNotFree = false;\r\n                shipInitialCellNumber = getRandomNum();\r\n                proposedShipCellsNums = getOccupiedCellsNums(shipInitialCellNumber, shipData.name, shipOrientation);\r\n                checkIfAllProposedShipCellsNumsAreFree();\r\n            }\r\n    \r\n            occupiedCellsNums[shipData.name] = getOccupiedCellsNums(shipInitialCellNumber, shipData.name, shipOrientation);\r\n            occupiedCellsCoords[shipData.name] = getOccupiedCellsCoords(shipInitialCellNumber, shipData.name, shipOrientation);\r\n        } else {\r\n            if (owner === \"user\") {\r\n                ship.style.width = cellSize + \"px\";\r\n                ship.style.height = cellSize * shipData.length + \"px\";\r\n            }\r\n\r\n            proposedShipCellsNums = getOccupiedCellsNums(shipInitialCellNumber, shipData.name, shipOrientation);\r\n            checkIfAllProposedShipCellsNumsAreFree();\r\n\r\n            while (shipInitialCellNumber >= shipData.notHeadRows || somePropCellsNotFree) {\r\n                somePropCellsNotFree = false;\r\n                shipInitialCellNumber = getRandomNum();\r\n                proposedShipCellsNums = getOccupiedCellsNums(shipInitialCellNumber, shipData.name, shipOrientation);\r\n                checkIfAllProposedShipCellsNumsAreFree();\r\n            }\r\n    \r\n            occupiedCellsNums[shipData.name] = getOccupiedCellsNums(shipInitialCellNumber, shipData.name, shipOrientation);\r\n            occupiedCellsCoords[shipData.name] = getOccupiedCellsCoords(shipInitialCellNumber, shipData.name, shipOrientation);\r\n        }\r\n\r\n        switch (shipData.name) {\r\n            case \"aircraftCarrier\": airCurrHeadCell.num = shipInitialCellNumber; break;\r\n            case \"battleship\": batCurrHeadCell.num = shipInitialCellNumber; break;\r\n            case \"cruiser\": cruCurrHeadCell.num = shipInitialCellNumber; break;\r\n            case \"submarine\": subCurrHeadCell.num = shipInitialCellNumber; break;\r\n            case \"destroyer\": desCurrHeadCell.num = shipInitialCellNumber; break;\r\n            default: console.error(\"Not a valid ship name\");\r\n        }\r\n\r\n        if (owner === \"user\") {\r\n            usersWaterCell = document.getElementsByClassName(\"users-water\")[0].children[shipInitialCellNumber];\r\n            usersWaterCell.appendChild(ship);\r\n        }\r\n    });\r\n}\r\n\r\nexport default placeShipsInWater;","function shipFactory() {\r\n    const ships = [\r\n        {\r\n            name: \"aircraftCarrier\",\r\n            id: \"aircraft-carrier\",\r\n            notHeadColumns: /G|H|I|J/,\r\n            notHeadRows: 60,\r\n            length: 5,\r\n            life: 5,\r\n        },\r\n        {\r\n            name: \"battleship\",\r\n            id: \"battleship\",\r\n            notHeadColumns: /H|I|J/,\r\n            notHeadRows: 70,\r\n            length: 4,\r\n            life: 4,\r\n        },\r\n        {\r\n            name: \"cruiser\",\r\n            id: \"cruiser\",\r\n            notHeadColumns: /I|J/,\r\n            notHeadRows: 80,\r\n            length: 3,\r\n            life: 3,\r\n        },\r\n        {\r\n            name: \"submarine\",\r\n            id: \"submarine\",\r\n            notHeadColumns: /I|J/,\r\n            notHeadRows: 80,\r\n            length: 3,\r\n            life: 3,\r\n        },\r\n        {\r\n            name: \"destroyer\",\r\n            id: \"destroyer\",\r\n            notHeadColumns: /J/,\r\n            notHeadRows: 90,\r\n            length: 2,\r\n            life: 2,\r\n        },\r\n    ];\r\n    return ships;\r\n}\r\n\r\nexport default shipFactory;","function checkCellCoordinate(num) {\r\n    const lastIndexNum = num.toString().slice(-1);\r\n    let horizontalCoordinate = null;\r\n    let verticalCoordinate = null;\r\n\r\n    switch (lastIndexNum) {\r\n        case \"0\": verticalCoordinate = \"A\"; break;\r\n        case \"1\": verticalCoordinate = \"B\"; break;\r\n        case \"2\": verticalCoordinate = \"C\"; break;\r\n        case \"3\": verticalCoordinate = \"D\"; break;\r\n        case \"4\": verticalCoordinate = \"E\"; break;\r\n        case \"5\": verticalCoordinate = \"F\"; break;\r\n        case \"6\": verticalCoordinate = \"G\"; break;\r\n        case \"7\": verticalCoordinate = \"H\"; break;\r\n        case \"8\": verticalCoordinate = \"I\"; break;\r\n        case \"9\": verticalCoordinate = \"J\"; break;\r\n        default: console.error(\"Vertical: Invalid cell input\");\r\n    }\r\n    \r\n    num >= 0 && num < 10 ? horizontalCoordinate = 1 \r\n    : num >= 10 && num < 20 ? horizontalCoordinate = 2\r\n    : num >= 20 && num < 30 ? horizontalCoordinate = 3\r\n    : num >= 30 && num < 40 ? horizontalCoordinate = 4\r\n    : num >= 40 && num < 50 ? horizontalCoordinate = 5\r\n    : num >= 50 && num < 60 ? horizontalCoordinate = 6\r\n    : num >= 60 && num < 70 ? horizontalCoordinate = 7\r\n    : num >= 70 && num < 80 ? horizontalCoordinate = 8\r\n    : num >= 80 && num < 90 ? horizontalCoordinate = 9\r\n    : num >= 90 && num < 100 ? horizontalCoordinate = 10\r\n    : console.log(\"Horizontal: Invalid cell input!\");\r\n\r\n    return verticalCoordinate + horizontalCoordinate;\r\n}\r\n\r\nexport default checkCellCoordinate;","import checkCellCoordinate from \"./checkCellCoordinate\";\r\n\r\nfunction getShipOccupiedCellsNumbers(headCellNum, shipName, orientation) {\r\n    let shipHeadPosition = headCellNum;\r\n    let shipCellsCoverageNumbers = [];\r\n    let shipLength = null;\r\n\r\n    switch (shipName) {\r\n        case \"aircraftCarrier\": shipLength = 5; break;\r\n        case \"battleship\": shipLength = 4; break;\r\n        case \"cruiser\": shipLength = 3; break;\r\n        case \"submarine\": shipLength = 3; break;\r\n        case \"destroyer\": shipLength = 2; break;\r\n        default: console.error(\"Not a valid ship name\");\r\n    }\r\n\r\n    for (let i = 0; i < shipLength; i++) {\r\n        shipCellsCoverageNumbers.push(shipHeadPosition);\r\n        orientation === \"h\" ? shipHeadPosition += 1 : shipHeadPosition += 10;\r\n    }\r\n\r\n    return shipCellsCoverageNumbers;\r\n}\r\n\r\nfunction getShipOccupiedCellsCoordinates(headCellNum, shipName, orientation) {\r\n    let shipHeadPosition = headCellNum;\r\n    let shipCellsCoverageCoordinates = [];\r\n    let shipLength = null;\r\n\r\n    switch (shipName) {\r\n        case \"aircraftCarrier\": shipLength = 5; break;\r\n        case \"battleship\": shipLength = 4; break;\r\n        case \"cruiser\": shipLength = 3; break;\r\n        case \"submarine\": shipLength = 3; break;\r\n        case \"destroyer\": shipLength = 2; break;\r\n        default: console.error(\"Not a valid ship name\");\r\n    }\r\n\r\n    for (let i = 0; i < shipLength; i++) {\r\n        shipCellsCoverageCoordinates.push(checkCellCoordinate(shipHeadPosition));\r\n        orientation === \"h\" ? shipHeadPosition += 1 : shipHeadPosition += 10;\r\n    }\r\n\r\n    return shipCellsCoverageCoordinates;\r\n}\r\n\r\nexport { getShipOccupiedCellsNumbers, getShipOccupiedCellsCoordinates };","function placeShipsInDockArea() {\r\n    const battleshipDock = document.getElementsByClassName(\"ship-dock\");\r\n    [...battleshipDock].forEach(dock => {\r\n        for(let i = 0; i < 5; i++) {\r\n            const ship = document.createElement('div');\r\n            ship.classList.add(\"ship-in-docking-area\");\r\n            dock.appendChild(ship);\r\n        }\r\n    });\r\n}\r\n\r\nexport default placeShipsInDockArea;","function changeShipOrientation(gameStarted, e, ships, shipName, currentCellNum, cellCoord, getOccupiedCellsNums, occupiedCellsNums) {\r\n    if (!gameStarted) {\r\n        const cellSize = document.getElementsByClassName(\"users-water\")[0].children[0].clientWidth;\r\n        const shipOrientation = e.target.dataset.orientation;\r\n    \r\n        let shipData = null;\r\n        let allShipsOccupiedCellsNums = null;\r\n        let dblclickShipHeadCellNum = getOccupiedCellsNums(currentCellNum, shipName, shipOrientation)[0];\r\n        let dblclickShipProposedCellsNums = [];\r\n        let somePropCellsNotFree = false;\r\n    \r\n        // Get the double-clicked ship's data:\r\n        for (const obj of ships) {\r\n            if  (obj.name === shipName) {\r\n                shipData = obj;\r\n            }\r\n        }\r\n        \r\n        // Get the cells occupied by all the ships:\r\n        allShipsOccupiedCellsNums = [...new Set([\r\n            ...occupiedCellsNums.aircraftCarrier,\r\n            ...occupiedCellsNums.battleship,\r\n            ...occupiedCellsNums.cruiser,\r\n            ...occupiedCellsNums.submarine,\r\n            ...occupiedCellsNums.destroyer\r\n        ])];\r\n        \r\n        // Remove the double-clicked ship's head cell from the allShipsOccupiedCellsNums array:\r\n        allShipsOccupiedCellsNums = allShipsOccupiedCellsNums.filter(n => n !== dblclickShipHeadCellNum);\r\n    \r\n        function checkIfAllProposedShipCellsNumsAreFree() {\r\n            for (let i = 0; i < dblclickShipProposedCellsNums.length; i++) {\r\n                if (allShipsOccupiedCellsNums.includes(dblclickShipProposedCellsNums[i])) {\r\n                    somePropCellsNotFree = true;\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    \r\n        if (shipOrientation === \"h\") {\r\n            dblclickShipProposedCellsNums = getOccupiedCellsNums(currentCellNum, shipName, \"v\");\r\n            checkIfAllProposedShipCellsNumsAreFree();\r\n    \r\n            if (currentCellNum < shipData.notHeadRows && somePropCellsNotFree === false) {\r\n                e.target.dataset.orientation = \"v\";\r\n                e.target.style.width = cellSize + \"px\";\r\n                e.target.style.height = cellSize * shipData.length + \"px\";\r\n                occupiedCellsNums[shipName] = dblclickShipProposedCellsNums;\r\n            }\r\n        } else {\r\n            dblclickShipProposedCellsNums = getOccupiedCellsNums(currentCellNum, shipName, \"h\");\r\n            checkIfAllProposedShipCellsNumsAreFree();\r\n            \r\n            if (!shipData.notHeadColumns.test(cellCoord(currentCellNum)) && somePropCellsNotFree === false) {\r\n                e.target.dataset.orientation = \"h\";\r\n                e.target.style.width = cellSize * shipData.length + \"px\";\r\n                e.target.style.height = cellSize + \"px\";\r\n                occupiedCellsNums[shipName] = dblclickShipProposedCellsNums;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default changeShipOrientation;","import interact from 'interactjs';\r\n\r\nfunction dragShip(gameStarted, id, name, shipAxisPosition, shipCurrHeadCell, getOccupiedCellsNums, getOccupiedCellsCoords, occupiedCellsNums, occupiedCellsCoords) {\r\n    if (!gameStarted) {\r\n        let draggedShipCurrHeadCellNum = null;\r\n        let draggedShipCurrOccupiedCellsNums = null;\r\n        let draggedShipCurrAxisPosition = null;\r\n        let allShipsOccupiedCellsNums = null;\r\n        let draggedShipProposedCellsNums = [];\r\n        let somePropCellsNotFree = false;\r\n    \r\n        function getAllShipsOccupiedCellsNums() {\r\n            allShipsOccupiedCellsNums = [...new Set([\r\n                ...occupiedCellsNums.aircraftCarrier,\r\n                ...occupiedCellsNums.battleship,\r\n                ...occupiedCellsNums.cruiser,\r\n                ...occupiedCellsNums.submarine,\r\n                ...occupiedCellsNums.destroyer\r\n            ])];\r\n        }\r\n    \r\n        function removeDraggedShipCellsFromAllShipsOccCellsNumsArr() {\r\n            draggedShipCurrOccupiedCellsNums.forEach(i => {\r\n                allShipsOccupiedCellsNums = allShipsOccupiedCellsNums.filter(n => n !== i);\r\n            });\r\n        }\r\n    \r\n        function checkIfAllProposedShipCellsNumsAreFree() {\r\n            for (let i = 0; i < draggedShipProposedCellsNums.length; i++) {\r\n                if (allShipsOccupiedCellsNums.includes(draggedShipProposedCellsNums[i])) {\r\n                    somePropCellsNotFree = true;\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        \r\n        interact(id).draggable({      \r\n            modifiers: [\r\n                interact.modifiers.snap({ \r\n                    targets: [interact.snappers.grid({ x: 35, y: 35 })],\r\n                    relativePoints: [{ x: 0, y: 0 }],\r\n                    offset: 'self',\r\n                }),\r\n                interact.modifiers.restrictRect({\r\n                    restriction: '.users-water',\r\n                })\r\n            ]\r\n        })\r\n        .on(\"dragstart\", function () {\r\n            draggedShipCurrHeadCellNum = shipCurrHeadCell.num;\r\n            draggedShipCurrOccupiedCellsNums = occupiedCellsNums[name];\r\n            draggedShipCurrAxisPosition = { x: shipAxisPosition.x, y: shipAxisPosition.y };\r\n            getAllShipsOccupiedCellsNums();\r\n            removeDraggedShipCellsFromAllShipsOccCellsNumsArr();\r\n        })\r\n        .on(\"dragmove\", function (e) {\r\n            const orientation = e.target.dataset.orientation;\r\n        \r\n            shipAxisPosition.x += e.dx;\r\n            shipAxisPosition.y += e.dy;\r\n            \r\n            e.target.style.transform =\r\n            `translate(${shipAxisPosition.x}px, ${shipAxisPosition.y}px)`;\r\n    \r\n            shipCurrHeadCell.num = Math.round(shipCurrHeadCell.num + ((e.dx/35) + (e.dy/3.5)));\r\n            occupiedCellsNums[name] = getOccupiedCellsNums(shipCurrHeadCell.num, name, orientation);\r\n            occupiedCellsCoords[name] = getOccupiedCellsCoords(shipCurrHeadCell.num, name, orientation);\r\n        })\r\n        .on(\"dragend\", function (e) {\r\n            const orientation = e.target.dataset.orientation;\r\n            draggedShipProposedCellsNums = getOccupiedCellsNums(shipCurrHeadCell.num, name, orientation);\r\n            checkIfAllProposedShipCellsNumsAreFree();\r\n    \r\n            if (somePropCellsNotFree) {\r\n                console.error(\"Cell Occupied = \" + somePropCellsNotFree);\r\n                somePropCellsNotFree = false;\r\n    \r\n                shipAxisPosition.x = draggedShipCurrAxisPosition.x;\r\n                shipAxisPosition.y = draggedShipCurrAxisPosition.y;\r\n    \r\n                e.target.style.transform =\r\n                `translate(${draggedShipCurrAxisPosition.x}px, ${draggedShipCurrAxisPosition.y}px)`;\r\n    \r\n                shipCurrHeadCell.num = draggedShipCurrHeadCellNum;\r\n                occupiedCellsNums[name] = getOccupiedCellsNums(draggedShipCurrHeadCellNum, name, orientation);\r\n                occupiedCellsCoords[name] = getOccupiedCellsCoords(draggedShipCurrHeadCellNum, name, orientation);\r\n            } else {\r\n                console.log(\"Cell Occupied = \" + somePropCellsNotFree);\r\n            }\r\n    \r\n            console.log(occupiedCellsNums[name]);\r\n            console.log(occupiedCellsCoords[name]);\r\n        });\r\n    }\r\n}\r\n\r\nexport default dragShip;","function addHitOrMissMark(cellOwner, cell, occupiedCellsNums, shipsInDockingArea, ships) {\r\n    const cellFired = cellOwner === \"pc\" ? Number(cell.id.slice(8)) : Number(cell.id.slice(10));\r\n    const pcShipsOccupiedCells = [...new Set([\r\n        ...occupiedCellsNums.aircraftCarrier,\r\n        ...occupiedCellsNums.battleship,\r\n        ...occupiedCellsNums.cruiser,\r\n        ...occupiedCellsNums.submarine,\r\n        ...occupiedCellsNums.destroyer\r\n    ])];\r\n\r\n    if (pcShipsOccupiedCells.includes(cellFired)) {\r\n        cell.style.backgroundColor = \"#fd5e53\";\r\n        // Track userShips' life and show when userShips get sunk:\r\n        for (const shipName in occupiedCellsNums) {\r\n            if (occupiedCellsNums[shipName].includes(cellFired)) {\r\n                for (let i = 0; i < ships.length; i++) {\r\n                    (ships[i].name === shipName) && (ships[i].life -= 1);\r\n                    (ships[i].life === 0) && (shipsInDockingArea[i].style.backgroundColor = \"#fd5e53\");\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        cell.innerText = \"•\";\r\n        cell.style.color = \"dimgrey\"; \r\n        cell.style.backgroundColor = \"#e5e4e2\"; \r\n    }\r\n}\r\n\r\nexport default addHitOrMissMark;","import { useEffect, useState } from \"react\";\r\nimport interact from 'interactjs';\r\nimport { \r\n    UsersGridArea, ComputersGridArea, createGameBoardCoordinate, createWaterCells, placeShipsInWater,\r\n    shipFactory, checkCellCoordinate, getShipOccupiedCellsNumbers, getShipOccupiedCellsCoordinates,\r\n    placeShipsInDockArea, changeShipOrientation, dragShip, addHitOrMissMark \r\n} from \"../aggregator\";\r\n\r\nlet gameOver = false;\r\nlet messageBoard = null;\r\nlet gameInfo = null;\r\nlet userCells = null;\r\nlet pcCells = null;\r\nlet userShipsInDockingArea = null;\r\nlet pcShipsInDockingArea = null;\r\nlet startGameBtn = null;\r\nlet restartGameBtn = null;\r\nlet userCellsShot = [];\r\nlet userAircraftCarrCurrHeadCellNum = { num: null };\r\nlet userBattleshipCurrHeadCellNum = { num: null };\r\nlet userCruiserCurrHeadCellNum = { num: null };\r\nlet userSubmarineCurrHeadCellNum = { num: null };\r\nlet userDestroyerCurrHeadCellNum = { num: null };\r\nlet pcAircraftCarrCurrHeadCellNum = { num: null };\r\nlet pcBattleshipCurrHeadCellNum = { num: null };\r\nlet pcCruiserCurrHeadCellNum = { num: null };\r\nlet pcSubmarineCurrHeadCellNum = { num: null };\r\nlet pcDestroyerCurrHeadCellNum = { num: null };\r\n\r\nconst userShips = shipFactory();\r\nconst pcShips = shipFactory();\r\nconst aircraftCarrierAxisPosition = { x: 0, y: 0 };\r\nconst battleShipAxisPosition = { x: 0, y: 0 };\r\nconst cruiserAxisPosition = { x: 0, y: 0 };\r\nconst submarineAxisPosition = { x: 0, y: 0 };\r\nconst destroyerAxisPosition = { x: 0, y: 0 };\r\nconst userOccupiedCellsNums = {\r\n    aircraftCarrier: [],\r\n    battleship: [],\r\n    cruiser: [],\r\n    submarine: [],\r\n    destroyer: []\r\n};\r\nconst userOccupiedCellsCoords = {\r\n    aircraftCarrier: [],\r\n    battleship: [],\r\n    cruiser: [],\r\n    submarine: [],\r\n    destroyer: []\r\n};\r\nconst pcOccupiedCellsNums = {\r\n    aircraftCarrier: [],\r\n    battleship: [],\r\n    cruiser: [],\r\n    submarine: [],\r\n    destroyer: []\r\n};\r\nconst pcOccupiedCellsCoords = {\r\n    aircraftCarrier: [],\r\n    battleship: [],\r\n    cruiser: [],\r\n    submarine: [],\r\n    destroyer: []\r\n};\r\n\r\nfunction Body() {\r\n    const [gameStarted, setGameStarted] = useState(false);\r\n    useEffect(() => {\r\n        createGameBoardCoordinate();\r\n        createWaterCells();\r\n        placeShipsInWater(\r\n            \"user\",\r\n            userShips,\r\n            checkCellCoordinate,\r\n            getShipOccupiedCellsNumbers,\r\n            getShipOccupiedCellsCoordinates,\r\n            userAircraftCarrCurrHeadCellNum, \r\n            userBattleshipCurrHeadCellNum, \r\n            userCruiserCurrHeadCellNum,\r\n            userSubmarineCurrHeadCellNum,\r\n            userDestroyerCurrHeadCellNum,\r\n            userOccupiedCellsNums,\r\n            userOccupiedCellsCoords\r\n        );\r\n        placeShipsInWater(\r\n            \"pc\",\r\n            pcShips,\r\n            checkCellCoordinate,\r\n            getShipOccupiedCellsNumbers,\r\n            getShipOccupiedCellsCoordinates,\r\n            pcAircraftCarrCurrHeadCellNum, \r\n            pcBattleshipCurrHeadCellNum, \r\n            pcCruiserCurrHeadCellNum,\r\n            pcSubmarineCurrHeadCellNum,\r\n            pcDestroyerCurrHeadCellNum,\r\n            pcOccupiedCellsNums,\r\n            pcOccupiedCellsCoords\r\n        );\r\n        placeShipsInDockArea();\r\n\r\n        messageBoard = document.getElementById(\"info-area\");\r\n        gameInfo = document.getElementById(\"game-info\");\r\n        gameInfo.innerText = \"Position your ships\";\r\n        userCells = document.querySelectorAll(\"div[id^='user-cell-']\");\r\n        pcCells = document.querySelectorAll(\"div[id^='pc-cell-']\");\r\n        userShipsInDockingArea = document.querySelectorAll(\".user-ships .ship-in-docking-area\");\r\n        pcShipsInDockingArea = document.querySelectorAll(\".pc-ships .ship-in-docking-area\");\r\n        startGameBtn = document.getElementById(\"start-game-btn\");\r\n        restartGameBtn = document.getElementById(\"restart-game-btn\");\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n        const changeAircraftCarrierOrientation = e => changeShipOrientation(gameStarted, e, userShips, \"aircraftCarrier\", userAircraftCarrCurrHeadCellNum.num, checkCellCoordinate, getShipOccupiedCellsNumbers, userOccupiedCellsNums);\r\n        const changeBattleshipOrientation = e => changeShipOrientation(gameStarted, e, userShips, \"battleship\", userBattleshipCurrHeadCellNum.num, checkCellCoordinate, getShipOccupiedCellsNumbers, userOccupiedCellsNums);\r\n        const changeCruiserOrientation = e => changeShipOrientation(gameStarted, e, userShips, \"cruiser\", userCruiserCurrHeadCellNum.num, checkCellCoordinate, getShipOccupiedCellsNumbers, userOccupiedCellsNums);\r\n        const changeSubmarineOrientation = e => changeShipOrientation(gameStarted, e, userShips, \"submarine\", userSubmarineCurrHeadCellNum.num, checkCellCoordinate, getShipOccupiedCellsNumbers, userOccupiedCellsNums);\r\n        const changeDestroyerOrientation = e => changeShipOrientation(gameStarted, e, userShips, \"destroyer\", userDestroyerCurrHeadCellNum.num, checkCellCoordinate, getShipOccupiedCellsNumbers, userOccupiedCellsNums);\r\n        const checkIfGameIsOver = dockingAreaShips => (Array.from(dockingAreaShips).every(i => i.style.backgroundColor)) && (gameOver = true);\r\n\r\n        dragShip(\r\n            gameStarted,\r\n            \"#aircraft-carrier\", \r\n            \"aircraftCarrier\",\r\n            aircraftCarrierAxisPosition, \r\n            userAircraftCarrCurrHeadCellNum, \r\n            getShipOccupiedCellsNumbers, \r\n            getShipOccupiedCellsCoordinates,\r\n            userOccupiedCellsNums,\r\n            userOccupiedCellsCoords\r\n        );\r\n        dragShip(\r\n            gameStarted,\r\n            \"#battleship\", \r\n            \"battleship\",\r\n            battleShipAxisPosition, \r\n            userBattleshipCurrHeadCellNum, \r\n            getShipOccupiedCellsNumbers, \r\n            getShipOccupiedCellsCoordinates,\r\n            userOccupiedCellsNums,\r\n            userOccupiedCellsCoords\r\n        );\r\n        dragShip(\r\n            gameStarted,\r\n            \"#cruiser\", \r\n            \"cruiser\",\r\n            cruiserAxisPosition, \r\n            userCruiserCurrHeadCellNum, \r\n            getShipOccupiedCellsNumbers, \r\n            getShipOccupiedCellsCoordinates,\r\n            userOccupiedCellsNums,\r\n            userOccupiedCellsCoords\r\n        );\r\n        dragShip(\r\n            gameStarted,\r\n            \"#submarine\", \r\n            \"submarine\",\r\n            submarineAxisPosition, \r\n            userSubmarineCurrHeadCellNum, \r\n            getShipOccupiedCellsNumbers, \r\n            getShipOccupiedCellsCoordinates,\r\n            userOccupiedCellsNums,\r\n            userOccupiedCellsCoords\r\n        );\r\n        dragShip(\r\n            gameStarted,\r\n            \"#destroyer\", \r\n            \"destroyer\",\r\n            destroyerAxisPosition, \r\n            userDestroyerCurrHeadCellNum, \r\n            getShipOccupiedCellsNumbers, \r\n            getShipOccupiedCellsCoordinates,\r\n            userOccupiedCellsNums,\r\n            userOccupiedCellsCoords\r\n        );\r\n\r\n        function addBorder() {\r\n            if (gameStarted && !this.style.backgroundColor && !gameOver) {\r\n                this.style.border = \"1px solid brown\";\r\n                this.style.cursor = \"pointer\";\r\n            }\r\n        }\r\n        \r\n        function removeBorder() {\r\n            this.style.border = \"\";\r\n            this.style.cursor = \"\";\r\n        }\r\n\r\n        function shootShip() {\r\n            if (gameStarted && !this.style.backgroundColor && !gameOver) {\r\n                addHitOrMissMark(\"pc\", this, pcOccupiedCellsNums, pcShipsInDockingArea, pcShips);\r\n                checkIfGameIsOver(pcShipsInDockingArea);\r\n                if (gameOver) {\r\n                    messageBoard.style.backgroundColor = \"#e9ffdb\";\r\n                    messageBoard.style.borderColor = \"green\";\r\n                    gameInfo.style.color = \"green\";\r\n                    gameInfo.innerText = \"Congratulations!!! You won the Game!\";\r\n                }\r\n                if (!gameOver) {\r\n                    const getRandomNum = () => Math.floor(Math.random() * 100);\r\n                    let cellNum = getRandomNum();\r\n            \r\n                    while (userCellsShot.includes(cellNum)) { cellNum = getRandomNum() }\r\n                    userCellsShot.push(cellNum);\r\n                    addHitOrMissMark(\"user\", userCells[cellNum], userOccupiedCellsNums, userShipsInDockingArea, userShips);\r\n                    checkIfGameIsOver(userShipsInDockingArea);\r\n                    if (gameOver) {\r\n                        messageBoard.style.backgroundColor = \"#ffe0f0\";\r\n                        messageBoard.style.borderColor = \"red\";\r\n                        gameInfo.style.color = \"red\";\r\n                        gameInfo.innerText = \"Oops!!! You lost the Game!\";\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        document.getElementById(\"aircraft-carrier\").addEventListener(\"dblclick\", changeAircraftCarrierOrientation);\r\n        document.getElementById(\"battleship\").addEventListener(\"dblclick\", changeBattleshipOrientation);\r\n        document.getElementById(\"cruiser\").addEventListener(\"dblclick\", changeCruiserOrientation);\r\n        document.getElementById(\"submarine\").addEventListener(\"dblclick\", changeSubmarineOrientation);\r\n        document.getElementById(\"destroyer\").addEventListener(\"dblclick\", changeDestroyerOrientation);\r\n        pcCells.forEach(c => c.addEventListener(\"mouseenter\", addBorder));\r\n        pcCells.forEach(c => c.addEventListener(\"mouseleave\", removeBorder));\r\n        pcCells.forEach(c => c.addEventListener(\"click\", shootShip));\r\n\r\n        return () => {\r\n            document.getElementById(\"aircraft-carrier\").removeEventListener(\"dblclick\", changeAircraftCarrierOrientation);\r\n            document.getElementById(\"battleship\").removeEventListener(\"dblclick\", changeBattleshipOrientation);\r\n            document.getElementById(\"cruiser\").removeEventListener(\"dblclick\", changeCruiserOrientation);\r\n            document.getElementById(\"submarine\").removeEventListener(\"dblclick\", changeSubmarineOrientation);\r\n            document.getElementById(\"destroyer\").removeEventListener(\"dblclick\", changeDestroyerOrientation);\r\n            pcCells.forEach(c => c.removeEventListener(\"mouseenter\", addBorder));\r\n            pcCells.forEach(c => c.removeEventListener(\"mouseleave\", removeBorder));\r\n            pcCells.forEach(c => c.removeEventListener(\"click\", shootShip));\r\n        }\r\n    }, [gameStarted])\r\n    \r\n    function handleStartGameBtnClickEvent() {\r\n        const shipsID = [\"#aircraft-carrier\", \"#battleship\", \"#cruiser\", \"#submarine\", \"#destroyer\"];\r\n        shipsID.forEach(i => interact(i).unset());\r\n\r\n        setGameStarted(true);\r\n        startGameBtn.style.display = \"none\";\r\n        restartGameBtn.style.display = \"block\";\r\n        messageBoard.style.backgroundColor = \"whitesmoke\";\r\n        messageBoard.style.borderColor = \"dimgrey\";\r\n        gameInfo.style.color = \"dimgrey\";\r\n        gameInfo.innerText = \"Game Started\";\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <section id=\"info-area\">\r\n                <p id=\"game-info\"></p>\r\n            </section>\r\n            <section id=\"grid-area\">\r\n                <UsersGridArea />\r\n                <ComputersGridArea />\r\n            </section>\r\n            <section id=\"button-area\">\r\n                <button id=\"start-game-btn\" onClick={handleStartGameBtnClickEvent}>Start the Game</button>\r\n                <button id=\"restart-game-btn\" onClick={() => window.location.reload()}>Restart Game</button>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Body;","function Footer() {\r\n    return (\r\n        <div id=\"footer\">\r\n            <a href=\"https://www.codesweetly.com/\" rel=\"noreferrer\" target=\"_blank\">Created by Oluwatobi Sofela</a>\r\n            <a href=\"https://www.wikihow.com/Play-Battleship/\" rel=\"noreferrer\" target=\"_blank\">About the Game</a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import Header from \"./Header\";\r\nimport Body from \"./Body\";\r\nimport Footer from \"./Footer\";\r\n\r\nfunction App() {\r\n    return (\r\n        <main>\r\n            <Header />\r\n            <Body />\r\n            <Footer />\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}